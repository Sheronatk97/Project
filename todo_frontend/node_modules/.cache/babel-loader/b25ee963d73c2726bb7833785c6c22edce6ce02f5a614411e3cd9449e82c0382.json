{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TODO\\\\todo_frontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Create from './Create';\nimport './App.css';\nimport axios from 'axios';\nimport { BsCircleFill, BsFillCheckCircleFill, BsFillTrashFill, BsPencil } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [updatetask, setUpdatetask] = useState('');\n  const [taskid, setTaskid] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:5000/get').then(result => setTodos(result.data)).catch(err => console.log(err));\n  }, []);\n\n  // const edit = (id) => {\n  //     axios.put(`http://localhost:5000/edit/${id}`)\n  //         .then(result => {\n  //             console.log(result.data);\n  //             const updatedTodos = todos.map(todo => {\n  //                 if (todo._id === id) {\n  //                     return { ...todo, done: !todo.done };\n  //                 }\n  //                 return todo;\n  //             });\n  //             setTodos(updatedTodos);\n  //         })\n  //         .catch(err => console.log(err));\n  // };\n\n  const Update = (id, updatedTask) => {\n    axios.put(`http://localhost:5000/update/${id}`, {\n      task: updatedTask\n    }).then(result => {\n      console.log(result.data);\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          return {\n            ...todo,\n            task: updatedTask\n          };\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n      setTaskid('');\n      setUpdatetask('');\n      Window.location.reload();\n    }).catch(err => console.log(err));\n  };\n  const Hdelete = id => {\n    axios.delete(`http://localhost:5000/delete/${id}`).then(result => {\n      console.log(result.data);\n      const updatedTodos = todos.filter(todo => todo._id !== id);\n      setTodos(updatedTodos);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: \"No tasks found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 38\n    }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: [todo.done ? /*#__PURE__*/_jsxDEV(BsFillCheckCircleFill, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(BsCircleFill, {\n          className: \"icon\",\n          onClick: () => edit(todo._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }, this), taskid === todo._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatetask,\n          onChange: e => setUpdatetask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: todo.done ? 'through' : 'normal',\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(BsPencil, {\n            className: \"icon\",\n            onClick: () => {\n              if (taskid === todo._id) {\n                Update(todo._id, updatetask);\n              } else {\n                setTaskid(todo._id);\n                setUpdatetask(todo.task);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(BsFillTrashFill, {\n            className: \"icon\",\n            onClick: () => Hdelete(todo._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }, this)]\n    }, todo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"qeEKvNRMbDOiBj/Ch57E47lVe/4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Create","axios","BsCircleFill","BsFillCheckCircleFill","BsFillTrashFill","BsPencil","jsxDEV","_jsxDEV","Home","_s","todos","setTodos","updatetask","setUpdatetask","taskid","setTaskid","get","then","result","data","catch","err","console","log","Update","id","updatedTask","put","task","updatedTodos","map","todo","_id","Window","location","reload","Hdelete","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","done","onClick","edit","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/TODO/todo_frontend/src/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Create from './Create';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { BsCircleFill, BsFillCheckCircleFill, BsFillTrashFill, BsPencil } from 'react-icons/bs';\r\n\r\nconst Home = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [updatetask, setUpdatetask] = useState('');\r\n    const [taskid, setTaskid] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/get')\r\n            .then(result => setTodos(result.data))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    // const edit = (id) => {\r\n    //     axios.put(`http://localhost:5000/edit/${id}`)\r\n    //         .then(result => {\r\n    //             console.log(result.data);\r\n    //             const updatedTodos = todos.map(todo => {\r\n    //                 if (todo._id === id) {\r\n    //                     return { ...todo, done: !todo.done };\r\n    //                 }\r\n    //                 return todo;\r\n    //             });\r\n    //             setTodos(updatedTodos);\r\n    //         })\r\n    //         .catch(err => console.log(err));\r\n    // };\r\n\r\n    const Update = (id, updatedTask) => {\r\n        axios.put(`http://localhost:5000/update/${id}`, { task: updatedTask })\r\n            .then(result => {\r\n                console.log(result.data);\r\n                const updatedTodos = todos.map(todo => {\r\n                    if (todo._id === id) {\r\n                        return { ...todo, task: updatedTask };\r\n                    }\r\n                    return todo;\r\n                });\r\n                setTodos(updatedTodos);\r\n                setTaskid('');\r\n                setUpdatetask('');\r\n                Window.location.reload();\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const Hdelete = (id) => {\r\n        axios.delete(`http://localhost:5000/delete/${id}`)\r\n            .then(result => {\r\n                console.log(result.data);\r\n                const updatedTodos = todos.filter(todo => todo._id !== id);\r\n                setTodos(updatedTodos);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Create />\r\n            {\r\n                todos.length === 0 ? <div className='task'>No tasks found</div> :\r\n                    todos.map((todo) => (\r\n                        <div className='task' key={todo._id}>\r\n                            <div className='checkbox'>\r\n                                {todo.done ? <BsFillCheckCircleFill className='icon' /> :\r\n                                    <BsCircleFill className='icon' onClick={() => edit(todo._id)} />}\r\n                                {taskid === todo._id ?\r\n                                    <input type='text' value={updatetask} onChange={e => setUpdatetask(e.target.value)} />\r\n                                    :\r\n                                    <p className={todo.done ? 'through' : 'normal'}>{todo.task}</p>\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                                <span>\r\n                                    <BsPencil className='icon' onClick={() => {\r\n                                        if (taskid === todo._id) {\r\n                                            Update(todo._id, updatetask);\r\n                                        } else {\r\n                                            setTaskid(todo._id);\r\n                                            setUpdatetask(todo.task);\r\n                                        }\r\n                                    }} />\r\n                                    <BsFillTrashFill className='icon' onClick={() => Hdelete(todo._id)} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n            }\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}